The goal of this project was to create a Google Kubernetes Engine (GKE) cluster using Terraform, deploy a test application (Nginx), and configure autoscaling for both pods and nodes to handle increased traffic. Additionally, I aimed to demonstrate a blue-green deployment strategy using Kubernetes.

Here is an overview of the approach:

GKE Cluster Creation:

I used Terraform to create a 2-node GKE cluster with autoscaling enabled for the node pool. The Terraform configuration defined the GKE cluster and node pool, with autoscaling limits of 2 to 5 nodes, to dynamically adjust the number of nodes based on load.
Deploying a Test Application (Nginx):

A simple Nginx deployment was created with a Kubernetes service exposing the application to the internet using a load balancer.
This deployment was designed to scale horizontally by increasing the number of pod replicas, which would trigger the pod autoscaler based on CPU utilization.
Autoscaling Setup:

Traffic Generation and Autoscaling Verification:

Load testing was done using the hey tool to simulate heavy traffic to the application. This triggered both the horizontal pod autoscaler and the cluster autoscaler.
The behavior of both autoscalers was monitored, and the number of pods and nodes was observed to increase and decrease based on load.
Challenges Encountered
Terraform State Management:

One challenge was managing the Terraform state, especially when making changes to the cluster or node pool configuration. I had to ensure that the state was properly updated and synchronized with the actual infrastructure.
Cluster Autoscaler Configuration:

While enabling the Cluster Autoscaler, it was crucial to ensure that the node pool had the correct configuration for scaling. Incorrect settings in the min and max node values could result in either insufficient resources or unnecessary node scaling.
Traffic Simulation and Load Generation:

Simulating sustained heavy traffic using hey required careful tuning to generate enough load to trigger the autoscalers without overwhelming the environment. It took some trial and error to determine the optimal load values.


Before traffic simulation 
shreyashree@cloudshell:~$ kubectl get nodes
NAME                                                  STATUS   ROLES    AGE     VERSION
gke-my-gke-cluster-1-terraform-202412-115c90e0-2ffx   Ready    <none>   7h39m   v1.30.5-gke.1699000
gke-my-gke-cluster-1-terraform-202412-115c90e0-htn0   Ready    <none>   7h39m   v1.30.5-gke.1699000

After traffic simulation
kubectl get nodes
NAME                                                  STATUS   ROLES    AGE    VERSION
gke-my-gke-cluster-1-terraform-202412-115c90e0-2ffx   Ready    <none>   7h2m   v1.30.5-gke.1699000
gke-my-gke-cluster-1-terraform-202412-115c90e0-92vp   Ready    <none>   87m    v1.30.5-gke.1699000
gke-my-gke-cluster-1-terraform-202412-115c90e0-ds6b   Ready    <none>   87m    v1.30.5-gke.1699000
gke-my-gke-cluster-1-terraform-202412-115c90e0-htn0   Ready    <none>   7h2m   v1.30.5-gke.1699000
gke-my-gke-cluster-1-terraform-202412-115c90e0-txvw   Ready    <none>   87m    v1.30.5-gke.1699000
                                                                                

Logs for autoscaling:-

resource.type="k8s_cluster"
resource.labels.project_id="Replace by ProjectID"
resource.labels.location="us-central1-a"
resource.labels.cluster_name="my-gke-cluster-111"
logName="projects/ProjectID/logs/container.googleapis.com%2Fcluster-autoscaler-visibility"
severity>=DEFAULT
("scaleUp" NOT "notScaleUp")

{
  "insertId": "2ef0bfe8-3e9e-4e95-b9f7-b251ef544001@a1",
  "jsonPayload": {
    "decision": {
      "scaleUp": {
        "increasedMigs": [
          {
            "mig": {
              "nodepool": "terraform-20241212023717858900000001",
              "zone": "us-central1-a",
              "name": "gke-my-gke-cluster-1-terraform-202412-115c90e0-grp"
            },
            "requestedNodes": 3
          }
        ]
      },
      "decideTime": "1733991121",
      "eventId": "c94e2d30-aaa8-4981-84c0-6b5eb6e17d7e"
    }
  },
  "resource": {
    "type": "k8s_cluster",
    "labels": {
      "cluster_name": "my-gke-cluster-111",
      "project_id": "ProjectID",
      "location": "us-central1-a"
    }
  },
  "timestamp": "2024-12-12T08:12:01.490374152Z",
  "logName": "projects/ProjectID/logs/container.googleapis.com%2Fcluster-autoscaler-visibility",
  "receiveTimestamp": "2024-12-12T08:12:02.611425118Z"
}

